-- MySQL Script generated by MySQL Workbench
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8mb3 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`mk_address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_address` (
`AddressId` INT NOT NULL AUTO_INCREMENT,
`Name` VARCHAR(45) NULL DEFAULT NULL,
PRIMARY KEY (`AddressId`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `mydb`.`mk_cities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_cities` (
`CitiesId` INT NOT NULL AUTO_INCREMENT,
`name` VARCHAR(45) NULL DEFAULT NULL,
`Mk_Address_AddressId` INT NOT NULL,
PRIMARY KEY (`CitiesId`),
CONSTRAINT `fk_Mk_Cities_Mk_Address`
FOREIGN KEY (`Mk_Address_AddressId`)
REFERENCES `mydb`.`mk_address` (`AddressId`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_Cities_Mk_Address1_idx` ON `mydb`.`mk_cities` (`Mk_Address_AddressId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_commerces`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_commerces` (
`CommerceId` INT NOT NULL AUTO_INCREMENT,
`CommerceName` VARCHAR(100) NOT NULL,
`CommercePhone` VARCHAR(45) NULL DEFAULT NULL,
`CommerceEmail` VARCHAR(120) NULL DEFAULT NULL,
`Active` BIT(1) NOT NULL DEFAULT b'1',
`Description` VARCHAR(255) NOT NULL,
`Mk_Address_AddressId` INT NOT NULL,
PRIMARY KEY (`CommerceId`),
CONSTRAINT `fk_MK_Commerces_Mk_Address`
FOREIGN KEY (`Mk_Address_AddressId`)
REFERENCES `mydb`.`mk_address` (`AddressId`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_MK_Commerces_Mk_Address1_idx` ON `mydb`.`mk_commerces` (`Mk_Address_AddressId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_users` (
`UserID` INT NOT NULL AUTO_INCREMENT,
`email` VARCHAR(120) NOT NULL,
`FirstName` VARCHAR(50) NOT NULL,
`LastName` VARCHAR(50) NOT NULL,
PRIMARY KEY (`UserID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE UNIQUE INDEX `email_UNIQUE` ON `mydb`.`mk_users` (`email` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_contactinfouser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_contactinfouser` (
`contactInfoId` INT NOT NULL AUTO_INCREMENT,
`value` VARCHAR(100) NULL DEFAULT NULL,
`enabled` BIT(1) NULL DEFAULT NULL,
`last_update` VARCHAR(45) NULL DEFAULT NULL,
`Mk_Users_UserID` INT NOT NULL,
PRIMARY KEY (`contactInfoId`),
CONSTRAINT `fk_Mk_ContactInfoUser_Mk_Users`
FOREIGN KEY (`Mk_Users_UserID`)
REFERENCES `mydb`.`mk_users` (`UserID`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_ContactInfoUser_Mk_Users1_idx` ON `mydb`.`mk_contactinfouser` (`Mk_Users_UserID` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_estados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_estados` (
`EstadosId` INT NOT NULL AUTO_INCREMENT,
`Name` VARCHAR(45) NULL DEFAULT NULL,
`Mk_Cities_CitiesId` INT NOT NULL,
PRIMARY KEY (`EstadosId`),
CONSTRAINT `fk_Mk_Estados_Mk_Cities`
FOREIGN KEY (`Mk_Cities_CitiesId`)
REFERENCES `mydb`.`mk_cities` (`CitiesId`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_Estados_Mk_Cities1_idx` ON `mydb`.`mk_estados` (`Mk_Cities_CitiesId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_countries`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_countries` (
`CountriesId` INT NOT NULL AUTO_INCREMENT,
`Name` VARCHAR(45) NULL DEFAULT NULL,
`currencySimbol` VARCHAR(3) NULL DEFAULT NULL,
`language` VARCHAR(7) NULL DEFAULT NULL,
`currency` VARCHAR(30) NULL DEFAULT NULL,
`Mk_Estados_EstadosId` INT NOT NULL,
PRIMARY KEY (`CountriesId`),
CONSTRAINT `fk_Mk_Countries_Mk_Estados`
FOREIGN KEY (`Mk_Estados_EstadosId`)
REFERENCES `mydb`.`mk_estados` (`EstadosId`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_Countries_Mk_Estados1_idx` ON `mydb`.`mk_countries` (`Mk_Estados_EstadosId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_facturas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_facturas` (
`FacturaID` INT NOT NULL AUTO_INCREMENT,
`Fecha` DATETIME NOT NULL,
`Total` DECIMAL(10,2) NOT NULL,
`Mk_Users_UserID` INT NOT NULL,
`MK_Commerces_CommerceId` INT NOT NULL,
PRIMARY KEY (`FacturaID`),
CONSTRAINT `fk_Facturas_Comercios`
FOREIGN KEY (`MK_Commerces_CommerceId`)
REFERENCES `mydb`.`mk_commerces` (`CommerceId`)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT `fk_Facturas_Usuarios`
FOREIGN KEY (`Mk_Users_UserID`)
REFERENCES `mydb`.`mk_users` (`UserID`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Facturas_Usuarios_idx` ON `mydb`.`mk_facturas` (`Mk_Users_UserID` ASC) VISIBLE;

CREATE INDEX `fk_Facturas_Comercios_idx` ON `mydb`.`mk_facturas` (`MK_Commerces_CommerceId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_products` (
`ProductID` INT NOT NULL AUTO_INCREMENT,
`ProductName` VARCHAR(100) NOT NULL,
`Descripcion` VARCHAR(255) NOT NULL,
`Precio` DECIMAL(10,2) NOT NULL DEFAULT '0.00',
`MK_Commerces_CommerceId` INT NOT NULL,
`Cantidad` INT NOT NULL DEFAULT '0',
PRIMARY KEY (`ProductID`),
CONSTRAINT `fk_MK_Products_MK_Commerces`
FOREIGN KEY (`MK_Commerces_CommerceId`)
REFERENCES `mydb`.`mk_commerces` (`CommerceId`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_MK_Products_MK_Commerces1_idx` ON `mydb`.`mk_products` (`MK_Commerces_CommerceId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_detallefacturas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_detallefacturas` (
`DetalleID` INT NOT NULL AUTO_INCREMENT,
`Cantidad` INT NOT NULL,
`PrecioUnitario` DECIMAL(10,2) NOT NULL,
`Subtotal` DECIMAL(10,2) NOT NULL,
`MK_Facturas_FacturaID` INT NOT NULL,
`MK_Products_ProductID` INT NOT NULL,
PRIMARY KEY (`DetalleID`),
CONSTRAINT `fk_DetalleFacturas_Facturas`
FOREIGN KEY (`MK_Facturas_FacturaID`)
REFERENCES `mydb`.`mk_facturas` (`FacturaID`)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT `fk_DetalleFacturas_Productos`
FOREIGN KEY (`MK_Products_ProductID`)
REFERENCES `mydb`.`mk_products` (`ProductID`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_DetalleFacturas_Facturas_idx` ON `mydb`.`mk_detallefacturas` (`MK_Facturas_FacturaID` ASC) VISIBLE;

CREATE INDEX `fk_DetalleFacturas_Productos_idx` ON `mydb`.`mk_detallefacturas` (`MK_Products_ProductID` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_fonds`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_fonds` (
`FondosId` INT NOT NULL AUTO_INCREMENT,
`name` VARCHAR(45) NULL DEFAULT NULL,
PRIMARY KEY (`FondosId`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `mydb`.`mk_traduccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_traduccion` (
`TraduccionId` INT NOT NULL AUTO_INCREMENT,
`code` VARCHAR(45) NULL DEFAULT NULL,
`caption` VARCHAR(45) NULL DEFAULT NULL,
`Enabled` BIT(1) NULL DEFAULT NULL,
PRIMARY KEY (`TraduccionId`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `mydb`.`mk_idiomas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_idiomas` (
`idiomaId` INT NOT NULL AUTO_INCREMENT,
`name` VARCHAR(45) NOT NULL,
`culture` VARCHAR(45) NOT NULL,
`Mk_Traduccion_TraduccionId` INT NOT NULL,
PRIMARY KEY (`idiomaId`),
CONSTRAINT `fk_Mk_idiomas_Mk_Traduccion`
FOREIGN KEY (`Mk_Traduccion_TraduccionId`)
REFERENCES `mydb`.`mk_traduccion` (`TraduccionId`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_idiomas_Mk_Traduccion1_idx` ON `mydb`.`mk_idiomas` (`Mk_Traduccion_TraduccionId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_logtype`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_logtype` (
`LogTypeId` INT NOT NULL AUTO_INCREMENT,
`Name` VARCHAR(45) NOT NULL,
PRIMARY KEY (`LogTypeId`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `mydb`.`mk_logs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_logs` (
`logsId` INT NOT NULL AUTO_INCREMENT,
`descrption` VARCHAR(145) NULL DEFAULT NULL,
`Mk_Users_UserID` INT NOT NULL,
`postTime` DATE NULL DEFAULT NULL,
`username` VARCHAR(50) NULL DEFAULT NULL,
`Trace` VARCHAR(45) NULL DEFAULT NULL,
`referenceId1` BIGINT NULL DEFAULT NULL,
`referenceId2` BIGINT NULL DEFAULT NULL,
`value1` VARCHAR(180) NULL DEFAULT NULL,
`value2` VARCHAR(180) NULL DEFAULT NULL,
`Checksum` INT NULL DEFAULT NULL,
`Mk_logType_LogTypeId` INT NOT NULL,
`Mk_Traduccion_TraduccionId` INT NOT NULL,
PRIMARY KEY (`logsId`),
CONSTRAINT `fk_Mk_logs_Mk_logType`
FOREIGN KEY (`Mk_logType_LogTypeId`)
REFERENCES `mydb`.`mk_logtype` (`LogTypeId`)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT `fk_Mk_logs_Mk_Traduccion`
FOREIGN KEY (`Mk_Traduccion_TraduccionId`)
REFERENCES `mydb`.`mk_traduccion` (`TraduccionId`)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT `fk_Mk_logs_Mk_Users`
FOREIGN KEY (`Mk_Users_UserID`)
REFERENCES `mydb`.`mk_users` (`UserID`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_logs_Mk_Users1_idx` ON `mydb`.`mk_logs` (`Mk_Users_UserID` ASC) VISIBLE;

CREATE INDEX `fk_Mk_logs_Mk_logType1_idx` ON `mydb`.`mk_logs` (`Mk_logType_LogTypeId` ASC) VISIBLE;

CREATE INDEX `fk_Mk_logs_Mk_Traduccion1_idx` ON `mydb`.`mk_logs` (`Mk_Traduccion_TraduccionId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_logsecurity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_logsecurity` (
`LogSecurityId` INT NOT NULL AUTO_INCREMENT,
`name` VARCHAR(45) NULL DEFAULT NULL,
`Mk_logs_logsId` INT NOT NULL,
PRIMARY KEY (`LogSecurityId`),
CONSTRAINT `fk_Mk_LogSecurity_Mk_logs`
FOREIGN KEY (`Mk_logs_logsId`)
REFERENCES `mydb`.`mk_logs` (`logsId`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_LogSecurity_Mk_logs1_idx` ON `mydb`.`mk_logsecurity` (`Mk_logs_logsId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_logsources`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_logsources` (
`LogSourcesId` INT NOT NULL,
`name` VARCHAR(45) NULL DEFAULT NULL,
`LogoURL` VARCHAR(200) NULL DEFAULT NULL,
`Mk_logs_logsId` INT NOT NULL,
PRIMARY KEY (`LogSourcesId`),
CONSTRAINT `fk_Mk_LogSources_Mk_logs`
FOREIGN KEY (`Mk_logs_logsId`)
REFERENCES `mydb`.`mk_logs` (`logsId`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_LogSources_Mk_logs1_idx` ON `mydb`.`mk_logsources` (`Mk_logs_logsId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_metodopago`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_metodopago` (
`metodoPagoId` INT NOT NULL AUTO_INCREMENT,
`name` VARCHAR(45) NULL DEFAULT NULL,
`ApiURL` VARCHAR(45) NULL DEFAULT NULL,
`secretKey` VARCHAR(45) NULL DEFAULT NULL,
`key` VARCHAR(45) NULL DEFAULT NULL,
`LogoIconURL` VARCHAR(45) NULL DEFAULT NULL,
`enabled` BIT(1) NULL DEFAULT NULL,
`Mk_ContactInfoUser_contactInfoId` INT NOT NULL,
PRIMARY KEY (`metodoPagoId`),
CONSTRAINT `fk_Mk_metodoPago_Mk_ContactInfoUser`
FOREIGN KEY (`Mk_ContactInfoUser_contactInfoId`)
REFERENCES `mydb`.`mk_contactinfouser` (`contactInfoId`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_metodoPago_Mk_ContactInfoUser1_idx` ON `mydb`.`mk_metodopago` (`Mk_ContactInfoUser_contactInfoId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_pagos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_pagos` (
`PagoId` BIGINT NOT NULL AUTO_INCREMENT,
`monto` INT NULL DEFAULT NULL,
`montoActual` INT NULL DEFAULT NULL,
`Currency` VARCHAR(45) NULL DEFAULT NULL,
`auth` VARCHAR(45) NULL DEFAULT NULL,
`referencia` VARCHAR(45) NULL DEFAULT NULL,
`CahangeToken` VARCHAR(45) NULL DEFAULT NULL,
`Mk_Pagoscol` VARCHAR(45) NULL DEFAULT NULL,
`Description` VARCHAR(45) NULL DEFAULT NULL,
`error` BIT(1) NULL DEFAULT NULL,
`Fecha` DATE NULL DEFAULT NULL,
`modulo` VARCHAR(45) NULL DEFAULT NULL,
`Checksum` VARCHAR(45) NULL DEFAULT NULL,
`Mk_metodoPago_metodoPagoId` INT NOT NULL,
`Mk_Users_UserID` INT NOT NULL,
PRIMARY KEY (`PagoId`),
CONSTRAINT `fk_Mk_Pagos_Mk_metodoPago`
FOREIGN KEY (`Mk_metodoPago_metodoPagoId`)
REFERENCES `mydb`.`mk_metodopago` (`metodoPagoId`)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT `fk_Mk_Pagos_Mk_Users`
FOREIGN KEY (`Mk_Users_UserID`)
REFERENCES `mydb`.`mk_users` (`UserID`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_Pagos_Mk_metodoPago1_idx` ON `mydb`.`mk_pagos` (`Mk_metodoPago_metodoPagoId` ASC) VISIBLE;

CREATE INDEX `fk_Mk_Pagos_Mk_Users1_idx` ON `mydb`.`mk_pagos` (`Mk_Users_UserID` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_metodosdisponibles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_metodosdisponibles` (
`MetodosDisponiblesId` INT NOT NULL AUTO_INCREMENT,
`name` VARCHAR(45) NULL DEFAULT NULL,
`Token` VARCHAR(45) NULL DEFAULT NULL,
`expTokenDate` DATE NULL DEFAULT NULL,
`MaskAccount` VARCHAR(45) NULL DEFAULT NULL,
`Mk_Users_UserID` INT NOT NULL,
`Mk_metodoPago_metodoPagoId` INT NOT NULL,
`Mk_Pagos_PagoId` BIGINT NOT NULL,
PRIMARY KEY (`MetodosDisponiblesId`),
CONSTRAINT `fk_Mk_MetodosDisponibles_Mk_metodoPago`
FOREIGN KEY (`Mk_metodoPago_metodoPagoId`)
REFERENCES `mydb`.`mk_metodopago` (`metodoPagoId`)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT `fk_Mk_MetodosDisponibles_Mk_Pagos`
FOREIGN KEY (`Mk_Pagos_PagoId`)
REFERENCES `mydb`.`mk_pagos` (`PagoId`)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT `fk_Mk_MetodosDisponibles_Mk_Users`
FOREIGN KEY (`Mk_Users_UserID`)
REFERENCES `mydb`.`mk_users` (`UserID`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_MetodosDisponibles_Mk_Users1_idx` ON `mydb`.`mk_metodosdisponibles` (`Mk_Users_UserID` ASC) VISIBLE;

CREATE INDEX `fk_Mk_MetodosDisponibles_Mk_metodoPago1_idx` ON `mydb`.`mk_metodosdisponibles` (`Mk_metodoPago_metodoPagoId` ASC) VISIBLE;

CREATE INDEX `fk_Mk_MetodosDisponibles_Mk_Pagos1_idx` ON `mydb`.`mk_metodosdisponibles` (`Mk_Pagos_PagoId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_permisos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_permisos` (
`MK_PermisosId` INT NOT NULL AUTO_INCREMENT,
`Description` VARCHAR(120) NULL DEFAULT NULL,
`Code` VARCHAR(45) NOT NULL,
`PostTime` DATE NULL DEFAULT NULL,
PRIMARY KEY (`MK_PermisosId`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `mydb`.`mk_permisos_por_perfil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_permisos_por_perfil` (
`Permisos_por_perfiIdl` INT NOT NULL AUTO_INCREMENT,
`postTime` DATE NULL DEFAULT NULL,
`Deleted` BIT(1) NULL DEFAULT NULL,
`MK_Permisos_MK_PermisosId` INT NOT NULL,
PRIMARY KEY (`Permisos_por_perfiIdl`),
CONSTRAINT `fk_Mk_Permisos_por_perfil_MK_Permisos`
FOREIGN KEY (`MK_Permisos_MK_PermisosId`)
REFERENCES `mydb`.`mk_permisos` (`MK_PermisosId`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_Permisos_por_perfil_MK_Permisos1_idx` ON `mydb`.`mk_permisos_por_perfil` (`MK_Permisos_MK_PermisosId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_permisos_por_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_permisos_por_usuario` (
`Permiso_por_userID` INT NOT NULL,
`PostTime` DATE NOT NULL,
`deleted` BIT(1) NOT NULL,
`MK_Permisos_MK_PermisosId` INT NOT NULL,
`Mk_Users_UserID` INT NOT NULL,
PRIMARY KEY (`Permiso_por_userID`),
CONSTRAINT `fk_MK_Permisos_por_usuario_MK_Permisos`
FOREIGN KEY (`MK_Permisos_MK_PermisosId`)
REFERENCES `mydb`.`mk_permisos` (`MK_PermisosId`)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT `fk_MK_Permisos_por_usuario_Mk_Users`
FOREIGN KEY (`Mk_Users_UserID`)
REFERENCES `mydb`.`mk_users` (`UserID`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_MK_Permisos_por_usuario_MK_Permisos_idx` ON `mydb`.`mk_permisos_por_usuario` (`MK_Permisos_MK_PermisosId` ASC) VISIBLE;

CREATE INDEX `fk_MK_Permisos_por_usuario_Mk_Users1_idx` ON `mydb`.`mk_permisos_por_usuario` (`Mk_Users_UserID` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_personbalance`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_personbalance` (
`PersonBalanceId` INT NOT NULL AUTO_INCREMENT,
`Balance` INT NULL DEFAULT NULL,
`LastBalance` INT NULL DEFAULT NULL,
`LastUpdate` DATE NULL DEFAULT NULL,
`Checksum` INT NULL DEFAULT NULL,
`FreezAmount` INT NULL DEFAULT NULL,
PRIMARY KEY (`PersonBalanceId`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `mydb`.`mk_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_roles` (
`Mk_RolesId` INT NOT NULL AUTO_INCREMENT,
`RoleName` VARCHAR(45) NOT NULL,
`Deleted` BIT(1) NULL DEFAULT NULL,
`PostTime` DATE NULL DEFAULT NULL,
`Mk_Permisos_por_perfil_Permisos_por_perfiIdl` INT NOT NULL,
PRIMARY KEY (`Mk_RolesId`),
CONSTRAINT `fk_Mk_Roles_Mk_Permisos_por_perfil`
FOREIGN KEY (`Mk_Permisos_por_perfil_Permisos_por_perfiIdl`)
REFERENCES `mydb`.`mk_permisos_por_perfil` (`Permisos_por_perfiIdl`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_Roles_Mk_Permisos_por_perfil1_idx` ON `mydb`.`mk_roles` (`Mk_Permisos_por_perfil_Permisos_por_perfiIdl` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_transtype`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_transtype` (
`TrnasTypeId` INT NOT NULL AUTO_INCREMENT,
`name` VARCHAR(45) NULL DEFAULT NULL,
PRIMARY KEY (`TrnasTypeId`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `mydb`.`mk_transacciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_transacciones` (
`TransaccionesId` INT NOT NULL,
`Amount` INT NULL DEFAULT NULL,
`Description` VARCHAR(45) NULL DEFAULT NULL,
`TransDate` DATE NULL DEFAULT NULL,
`PostTime` DATE NULL DEFAULT NULL,
`RefNumber` VARCHAR(45) NULL DEFAULT NULL,
`Exchange_rate` VARCHAR(45) NULL DEFAULT NULL,
`ChackSum` VARBINARY(10000) NULL DEFAULT NULL,
`Mk_Pagos_PagoId` BIGINT NOT NULL,
`Mk_PersonBalance_PersonBalanceId` INT NOT NULL,
`Mk_TransType_TrnasTypeId` INT NOT NULL,
`Mk_Fonds_FondosId` INT NOT NULL,
PRIMARY KEY (`TransaccionesId`),
CONSTRAINT `fk_Mk_Transacciones_Mk_Fonds`
FOREIGN KEY (`Mk_Fonds_FondosId`)
REFERENCES `mydb`.`mk_fonds` (`FondosId`)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT `fk_Mk_Transacciones_Mk_Pagos`
FOREIGN KEY (`Mk_Pagos_PagoId`)
REFERENCES `mydb`.`mk_pagos` (`PagoId`)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT `fk_Mk_Transacciones_Mk_PersonBalance`
FOREIGN KEY (`Mk_PersonBalance_PersonBalanceId`)
REFERENCES `mydb`.`mk_personbalance` (`PersonBalanceId`)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT `fk_Mk_Transacciones_Mk_TransType`
FOREIGN KEY (`Mk_TransType_TrnasTypeId`)
REFERENCES `mydb`.`mk_transtype` (`TrnasTypeId`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_Transacciones_Mk_Pagos1_idx` ON `mydb`.`mk_transacciones` (`Mk_Pagos_PagoId` ASC) VISIBLE;

CREATE INDEX `fk_Mk_Transacciones_Mk_PersonBalance1_idx` ON `mydb`.`mk_transacciones` (`Mk_PersonBalance_PersonBalanceId` ASC) VISIBLE;

CREATE INDEX `fk_Mk_Transacciones_Mk_TransType1_idx` ON `mydb`.`mk_transacciones` (`Mk_TransType_TrnasTypeId` ASC) VISIBLE;

CREATE INDEX `fk_Mk_Transacciones_Mk_Fonds1_idx` ON `mydb`.`mk_transacciones` (`Mk_Fonds_FondosId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_transacciones_has_mk_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_transacciones_has_mk_users` (
`Mk_Transacciones_TransaccionesId` INT NOT NULL,
`Mk_Users_UserID` INT NOT NULL,
PRIMARY KEY (`Mk_Transacciones_TransaccionesId`, `Mk_Users_UserID`),
CONSTRAINT `fk_Mk_Transacciones_has_Mk_Users_Mk_Transacciones`
FOREIGN KEY (`Mk_Transacciones_TransaccionesId`)
REFERENCES `mydb`.`mk_transacciones` (`TransaccionesId`)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT `fk_Mk_Transacciones_has_Mk_Users_Mk_Users`
FOREIGN KEY (`Mk_Users_UserID`)
REFERENCES `mydb`.`mk_users` (`UserID`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_Transacciones_has_Mk_Users_Mk_Users1_idx` ON `mydb`.`mk_transacciones_has_mk_users` (`Mk_Users_UserID` ASC) VISIBLE;

CREATE INDEX `fk_Mk_Transacciones_has_Mk_Users_Mk_Transacciones1_idx` ON `mydb`.`mk_transacciones_has_mk_users` (`Mk_Transacciones_TransaccionesId` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`mk_useraddresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_useraddresses` (
`UserAddressId` INT NOT NULL AUTO_INCREMENT,
`enabled` BIT(1) NULL DEFAULT NULL,
`Mk_Address_AddressId` INT NOT NULL,
`Mk_Users_UserID` INT NOT NULL,
PRIMARY KEY (`UserAddressId`),
CONSTRAINT `fk_Mk_UserAddresses_Mk_Address`
FOREIGN KEY (`Mk_Address_AddressId`)
REFERENCES `mydb`.`mk_address` (`AddressId`)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT `fk_Mk_UserAddresses_Mk_Users`
FOREIGN KEY (`Mk_Users_UserID`)
REFERENCES `mydb`.`mk_users` (`UserID`)
ON DELETE CASCADE
ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

CREATE INDEX `fk_Mk_UserAddresses_Mk_Address1_idx` ON `mydb`.`mk_useraddresses` (`Mk_Address_AddressId` ASC) VISIBLE;

CREATE INDEX `fk_Mk_UserAddresses_Mk_Users1_idx` ON `mydb`.`mk_useraddresses` (`Mk_Users_UserID` ASC) VISIBLE;

-- -----------------------------------------------------
-- Table `mydb`.`mk_buildings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_buildings` (
  `BuildingId` INT NOT NULL AUTO_INCREMENT,
  `BuildingName` VARCHAR(100) NOT NULL,
  `Mk_Address_AddressId` INT NOT NULL,
  PRIMARY KEY (`BuildingId`),
  CONSTRAINT `fk_Mk_Buildings_Mk_Address`
    FOREIGN KEY (`Mk_Address_AddressId`) REFERENCES `mydb`.`mk_address`(`AddressId`)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB
DEFAULT CHARACTER SET = utf8mb3;

-- -----------------------------------------------------
-- Table `mydb`.`mk_spaces` 
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_spaces` (
  `SpaceId` INT NOT NULL AUTO_INCREMENT,
  `BuildingId` INT NOT NULL,
  `SpaceName` VARCHAR(100) NOT NULL,
  `BaseRent` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`SpaceId`),
  CONSTRAINT `fk_Mk_Spaces_Mk_Buildings`
    FOREIGN KEY (`BuildingId`) REFERENCES `mydb`.`mk_buildings`(`BuildingId`)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB
DEFAULT CHARACTER SET = utf8mb3;

-- -----------------------------------------------------
-- Table `mydb`.`mk_contracts` 
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_contracts` (
  `ContractId` INT NOT NULL AUTO_INCREMENT,
  `SpaceId` INT NOT NULL,
  `MK_Commerces_CommerceId` INT NOT NULL,
  `StartDate` DATE NOT NULL,
  `EndDate` DATE NOT NULL,
  `RentAmount` DECIMAL(10,2) NOT NULL,
  `SalesPercentageFee` DECIMAL(5,2) NOT NULL DEFAULT 0,
  `BaseMonthlyRent` DECIMAL(10,2) NOT NULL DEFAULT 0,
  `Status` VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
  PRIMARY KEY (`ContractId`),
  CONSTRAINT `fk_Mk_Contracts_Mk_Spaces`
    FOREIGN KEY (`SpaceId`) REFERENCES `mydb`.`mk_spaces`(`SpaceId`)
    ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_Mk_Contracts_Mk_Commerces`
    FOREIGN KEY (`MK_Commerces_CommerceId`) REFERENCES `mydb`.`mk_commerces`(`CommerceId`)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB
DEFAULT CHARACTER SET = utf8mb3;

-- -----------------------------------------------------
-- Table `mydb`.`mk_operational_expenses` 
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_operational_expenses` (
  `ExpenseId` INT NOT NULL AUTO_INCREMENT,
  `MK_Commerces_CommerceId` INT NOT NULL,
  `ExpenseName` VARCHAR(100) NOT NULL,
  `Amount` DECIMAL(10,2) NOT NULL,
  `DateIncurred` DATE NOT NULL,
  PRIMARY KEY (`ExpenseId`),
  CONSTRAINT `fk_Mk_OperationalExpenses_Mk_Commerces`
    FOREIGN KEY (`MK_Commerces_CommerceId`) REFERENCES `mydb`.`mk_commerces`(`CommerceId`)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB
DEFAULT CHARACTER SET = utf8mb3;

-- -----------------------------------------------------
-- Table `mydb`.`mk_monthly_settlements` 
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mk_monthly_settlements` (
  `SettlementId` INT NOT NULL AUTO_INCREMENT,
  `ContractId` INT NOT NULL,
  `SettlementMonth` DATE NOT NULL,
  `TotalSales` DECIMAL(12,2) NOT NULL,
  `CalculatedFee` DECIMAL(12,2) NOT NULL,
  `BaseRent` DECIMAL(12,2) NOT NULL,
  `TotalAmount` DECIMAL(12,2) NOT NULL,
  `SettlementDate` DATETIME NOT NULL,
  `Status` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`SettlementId`),
  CONSTRAINT `fk_MonthlySettlements_Contracts`
    FOREIGN KEY (`ContractId`) REFERENCES `mk_contracts`(`ContractId`)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;



-- registerSale
DELIMITER $$
DROP PROCEDURE IF EXISTS `registerSale`$$

CREATE PROCEDURE `registerSale`(
    IN p_product_name VARCHAR(100),
    IN p_commerce_name VARCHAR(100),
    IN p_quantity INT,
    IN p_amount_paid DECIMAL(10,2),
    IN p_payment_method VARCHAR(50),
    IN p_payment_confirmation VARCHAR(100),
    IN p_reference_number VARCHAR(50),
    IN p_invoice_number VARCHAR(50),
    IN p_customer_name VARCHAR(100),
    IN p_discount_applied DECIMAL(10,2),
    IN p_user_id INT
)
BEGIN
    DECLARE v_product_id INT;
    DECLARE v_commerce_id INT;
    DECLARE v_precio DECIMAL(10,2);
    DECLARE v_factura_id INT;
    DECLARE v_subtotal DECIMAL(10,2);

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        ROLLBACK;
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Error al intentar registrar la venta :(';
    END;

    START TRANSACTION;


    -- Esto de acá es para buscar un comercio
    SELECT CommerceId INTO v_commerce_id
    FROM mk_commerces
    WHERE CommerceName = p_commerce_name
    LIMIT 1;

    IF v_commerce_id IS NULL THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'No se pudo encontrar el comercio buscado.';
    END IF;

    -- Esto para buscar un producto y verificarlo en stock
    SELECT ProductID, Precio, Cantidad INTO v_product_id, v_precio, @stock
    FROM mk_products
    WHERE ProductName = p_product_name AND MK_Commerces_CommerceId = v_commerce_id
    LIMIT 1;

    IF v_product_id IS NULL THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'No se encontró ningún producto.';
    END IF;

    IF @stock < p_quantity THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'El stock es insuficiente';
    END IF;

    SET v_subtotal = (v_precio * p_quantity) - IFNULL(p_discount_applied, 0);


    -- Esto es para insertar la factura dentro de la tabla de facturas
    INSERT INTO mk_facturas (Mk_Users_UserID, MK_Commerces_CommerceId, Fecha, Total)
    VALUES (p_user_id, v_commerce_id, NOW(), v_subtotal);

    SET v_factura_id = LAST_INSERT_ID();



    -- Detalles de la factura
    INSERT INTO mk_detallefacturas (MK_Facturas_FacturaID, MK_Products_ProductID, Cantidad, PrecioUnitario, Subtotal)
    VALUES (v_factura_id, v_product_id, p_quantity, v_precio, v_subtotal);


    -- Se actualiza el inventario
    UPDATE mk_products SET Cantidad = Cantidad - p_quantity WHERE ProductID = v_product_id;


    -- Hacemos el insert al log
    INSERT INTO mk_logs (Mk_Users_UserID, descrption, postTime, username, referenceId1, referenceId2, value1, value2, Checksum, Mk_logType_LogTypeId, Mk_Traduccion_TraduccionId)
    VALUES (p_user_id, CONCAT('Venta: ', p_commerce_name, ' - ', p_product_name), NOW(), USER(), v_factura_id, v_product_id, p_payment_method, p_reference_number, CRC32(CONCAT(v_factura_id, v_product_id, NOW())), 1, 1);

    COMMIT;
END$$

DELIMITER ;




-- settleCommerce

DELIMITER $$

DROP PROCEDURE IF EXISTS `settleCommerce`$$

CREATE PROCEDURE `settleCommerce`(
    IN p_commerce_name VARCHAR(100),
    IN p_space_name VARCHAR(100)
)
BEGIN
    DECLARE v_contract_id INT;
    DECLARE v_commerce_id INT;
    DECLARE v_total_sales DECIMAL(12,2);
    DECLARE v_fee DECIMAL(12,2);
    DECLARE v_base DECIMAL(12,2);
    DECLARE v_percentage DECIMAL(5,2);
    DECLARE v_total DECIMAL(12,2);
    DECLARE v_current_month DATE;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        ROLLBACK;
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Hubo un error al liquidar el comercio :(';
    END;

    START TRANSACTION;

    SET v_current_month = DATE_FORMAT(CURDATE(), '%Y-%m-01');

    -- Buscar algún comercio
    SELECT CommerceId INTO v_commerce_id
    FROM mk_commerces WHERE CommerceName = p_commerce_name
    LIMIT 1;

    IF v_commerce_id IS NULL THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'No se ha encontrado ningún comercio.';
    END IF;

    -- Buscar un contrato
    SELECT c.ContractId, c.SalesPercentageFee, c.BaseMonthlyRent 
    INTO v_contract_id, v_percentage, v_base
    FROM mk_contracts c
    JOIN mk_spaces s ON c.SpaceId = s.SpaceId
    WHERE c.MK_Commerces_CommerceId = v_commerce_id 
      AND s.SpaceName = p_space_name
      AND c.Status = 'ACTIVE'
    LIMIT 1;

    IF v_contract_id IS NULL THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'No se encontró ningún contrato.';
    END IF;


    -- Verificamos si ya fue liquidado
    IF EXISTS (SELECT 1 FROM mk_monthly_settlements 
               WHERE ContractId = v_contract_id 
               AND SettlementMonth = v_current_month) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Ya fue liquidado este mes';
    END IF;


    -- Calcular ventas del mes
    SELECT COALESCE(SUM(Total), 0) INTO v_total_sales
    FROM mk_facturas
    WHERE MK_Commerces_CommerceId = v_commerce_id
      AND YEAR(Fecha) = YEAR(CURDATE())
      AND MONTH(Fecha) = MONTH(CURDATE());

    SET v_fee = v_total_sales * (v_percentage / 100);
    SET v_total = v_base + v_fee;


    -- Insertamos la liquidación
    INSERT INTO mk_monthly_settlements (ContractId, SettlementMonth, TotalSales, CalculatedFee, BaseRent, TotalAmount, SettlementDate, Status)
    VALUES (v_contract_id, v_current_month, v_total_sales, v_fee, v_base, v_total, NOW(), 'PENDING');

    -- Hacemos el insert en el log igual
    INSERT INTO mk_logs (Mk_Users_UserID, descrption, postTime, username, referenceId1, referenceId2, Checksum, Mk_logType_LogTypeId, Mk_Traduccion_TraduccionId)
    VALUES (1, CONCAT('Liquidación: ', p_commerce_name, ' - ', p_space_name), NOW(), USER(), v_contract_id, LAST_INSERT_ID(), CRC32(CONCAT(v_contract_id, v_total, NOW())), 1, 1);

    COMMIT;
END$$

DELIMITER ;




-- Vista: 

DROP VIEW IF EXISTS business_monthly_report;

CREATE VIEW business_monthly_report AS
SELECT 
    c.CommerceName AS Business_Name,
    s.SpaceName AS Store_Space_Name,
    b.BuildingName AS Building_Name,
    MIN(f.Fecha) AS First_Sale_Date,
    MAX(f.Fecha) AS Last_Sale_Date,
    SUM(df.Cantidad) AS Items_Sold,
    SUM(f.Total) AS Total_Sales_Amount,
    con.SalesPercentageFee AS Fee_Percentage,
    ROUND(SUM(f.Total) * con.SalesPercentageFee / 100, 2) AS Fee_Amount,
    con.BaseMonthlyRent AS Monthly_Rent
FROM mk_commerces c
JOIN mk_contracts con ON c.CommerceId = con.MK_Commerces_CommerceId
JOIN mk_spaces s ON con.SpaceId = s.SpaceId
JOIN mk_buildings b ON s.BuildingId = b.BuildingId
LEFT JOIN mk_facturas f ON c.CommerceId = f.MK_Commerces_CommerceId
    AND YEAR(f.Fecha) = YEAR(CURDATE()) 
    AND MONTH(f.Fecha) = MONTH(CURDATE())
LEFT JOIN mk_detallefacturas df ON f.FacturaID = df.MK_Facturas_FacturaID
WHERE con.Status = 'ACTIVE'
GROUP BY c.CommerceId, s.SpaceId, b.BuildingId, con.SalesPercentageFee, con.BaseMonthlyRent;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


select *from mk_users;
insert into mk_users(UserID, email,FirstName,LastName)values

(1,'bryan','Bryan','marin');
insert into mk_users(UserID, email,FirstName,LastName)values
(2,'bryanm','Josue','marin');
insert into mk_users(UserID, email,FirstName,LastName)values
(3,'hectorgonzales@gmail.com','Hector','Gonzales');
insert into mk_users(UserID, email,FirstName,LastName)values
(4,'wendypadilla@gmail.com','Wendy','Montero');
insert into mk_users(UserID, email,FirstName,LastName)values
(5,'Cesar@gmail.com','cesar','Velverde');
insert into mk_users(UserID, email,FirstName,LastName)values
(6,'prijh@gmail.com','Priscila','Jiménez');
select *from mk_users;
select *from mk_permisos;
insert into mk_permisos(MK_PermisosId, Description, Code, PostTime)values
('1','tiene acceso a ver precios','064','2025-09-30');
insert into mk_permisos(MK_PermisosId, Description, Code, PostTime)values
('2','no tiene acceso a ver precios','06','2025-10-30');
insert into mk_permisos(MK_PermisosId, Description, Code, PostTime)values
('3','no tiene acceso a ver productos','056','2025-10-1');
insert into mk_permisos(MK_PermisosId, Description, Code, PostTime)values
('4','tiene acceso a ver produtcos','046','2025-09-30');
insert into mk_permisos(MK_PermisosId, Description, Code, PostTime)values
('5','tiene acceso a ver precios y comprar','076','2025-10-02');
insert into mk_permisos(MK_PermisosId, Description, Code, PostTime)values
('2','no tiene acceso a compra','060','2025-09-30');

select *from mk_permisos;
select * from mk_permisos_por_perfil;
insert into mk_permisos_por_perfil(Permisos_por_perfiIdl,postTime,Deleted,MK_Permisos_MK_PermisosId)values
('1','2025-10-02',0,'2');
insert into mk_permisos_por_perfil(Permisos_por_perfiIdl,postTime,Deleted,MK_Permisos_MK_PermisosId)values
('2','2025-10-02',0,'1');
insert into mk_permisos_por_perfil(Permisos_por_perfiIdl,postTime,Deleted,MK_Permisos_MK_PermisosId)values
('3','2025-10-12',1,'3');
insert into mk_permisos_por_perfil(Permisos_por_perfiIdl,postTime,Deleted,MK_Permisos_MK_PermisosId)values
('4','2025-10-22',1,'2');
insert into mk_permisos_por_perfil(Permisos_por_perfiIdl,postTime,Deleted,MK_Permisos_MK_PermisosId)values
('5','2025-11-02',0,'2');
select *from mk_permisos_por_perfil;